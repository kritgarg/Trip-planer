@import "tailwindcss";

/* ---------------------------------------------------- */
/* --- NEW THEME COLORS: DARK & FUTURISTIC (GLOBAL) --- */
/* ---------------------------------------------------- */
:root {
  /* Main Background and Text */
  --background: #121212; /* Dark Charcoal */
  --foreground: #E0E0E0; /* Light Gray Text */
  
  /* Accent Colors */
  --accent-primary: #00FFFF; /* Electric Cyan (Main Highlight) */
  --card-bg: #1A1A1A; /* Darker Gray for Cards */
  --card-border: #00FFFF33; /* Cyan border (20% opacity) */
  --button-text: #121212; /* Dark Text for Bright Buttons */
}

/* Ensure the theme variables are used (if needed by your theme setup) */
@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

/* Force dark theme colors for this component's look */
@media (prefers-color-scheme: dark) {
  :root {
    --background: #121212;
    --foreground: #E0E0E0;
  }
}

/* Apply base colors and the chosen font (mono/monospace) */
body {
  background: var(--background);
  color: var(--foreground);
  /* The TSX uses font-mono, so we should define a suitable monospace font here */
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
}

/* ---------------------------------------------------- */
/* --- EARTH LOADER STYLES (UPDATED FOR DARK MODE) ---- */
/* ---------------------------------------------------- */
.earth-loader {
  /* Changed colors to fit the dark theme */
  --watercolor: var(--card-bg); /* Dark water color */
  --landcolor: #39FF14; /* Neon Green land color */
  width: 7.5em;
  height: 7.5em;
  background-color: var(--watercolor);
  position: relative;
  overflow: hidden;
  border-radius: 50%;
  /* Adjusted shadow for dark context */
  box-shadow: inset 0em 0.5em rgba(255, 255, 255, 0.1), inset 0em -0.5em rgba(0, 0, 0, 0.4);
  border: solid 0.15em var(--accent-primary); /* Use Cyan for the outer ring */
  animation: startround 1s;
  animation-iteration-count: 1;
}

.earth p {
  color: var(--accent-primary); /* Cyan text color */
  display: flex;
  justify-content: center;
  align-items: center;
  padding-top: 0.25em;
  font-size: 1.25em;
  font-family: "Gill Sans", "Gill Sans MT", Calibri, "Trebuchet MS", sans-serif;
}

/* The rest of the Earth Loader keyframes remain the same */
.earth-loader svg:nth-child(1) {
  position: absolute;
  bottom: -2em;
  width: 7em;
  height: auto;
  animation: round1 5s infinite linear 0.75s;
}

.earth-loader svg:nth-child(2) {
  position: absolute;
  top: -3em;
  width: 7em;
  height: auto;
  animation: round1 5s infinite linear;
}

.earth-loader svg:nth-child(3) {
  position: absolute;
  top: -2.5em;
  width: 7em;
  height: auto;
  animation: round2 5s infinite linear;
}

.earth-loader svg:nth-child(4) {
  position: absolute;
  bottom: -2.2em;
  width: 7em;
  height: auto;
  animation: round2 5s infinite linear 0.75s;
}

@keyframes startround {
  0% {
    filter: brightness(500%);
    box-shadow: none;
  }
  75% {
    filter: brightness(500%);
    box-shadow: none;
  }
  100% {
    filter: brightness(100%);
    /* Use updated shadow */
    box-shadow: inset 0em 0.5em rgba(255, 255, 255, 0.1), inset 0em -0.5em rgba(0, 0, 0, 0.4);
  }
}

@keyframes round1 {
  0% {
    left: -2em;
    opacity: 100%;
    transform: skewX(0deg) rotate(0deg);
  }
  30% {
    left: -6em;
    opacity: 100%;
    transform: skewX(-25deg) rotate(25deg);
  }
  31% {
    left: -6em;
    opacity: 0%;
    transform: skewX(-25deg) rotate(25deg);
  }
  35% {
    left: 7em;
    opacity: 0%;
    transform: skewX(25deg) rotate(-25deg);
  }
  45% {
    left: 7em;
    opacity: 100%;
    transform: skewX(25deg) rotate(-25deg);
  }
  100% {
    left: -2em;
    opacity: 100%;
    transform: skewX(0deg) rotate(0deg);
  }
}

@keyframes round2 {
  0% {
    left: 5em;
    opacity: 100%;
    transform: skewX(0deg) rotate(0deg);
  }
  75% {
    left: -7em;
    opacity: 100%;
    transform: skewX(-25deg) rotate(25deg);
  }
  76% {
    left: -7em;
    opacity: 0%;
    transform: skewX(-25deg) rotate(25deg);
  }
  77% {
    left: 8em;
    opacity: 0%;
    transform: skewX(25deg) rotate(-25deg);
  }
  80% {
    left: 8em;
    opacity: 100%;
    transform: skewX(25deg) rotate(-25deg);
  }
  100% {
    left: 5em;
    opacity: 100%;
    transform: skewX(0deg) rotate(0deg);
  }
}